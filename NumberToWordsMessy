public class NumberToWords {
    public static void numberToWords(int number){
        if(number < 0){
            System.out.println("Invalid Value");
        }else if(number == 0){
            System.out.println("Zero");
        }
        int counter = getDigitCount(number);
        int reverse = reverse(number);
        int reverseCounter = getDigitCount(reverse);
        int reverseUnit = 0;
        if(counter==reverseCounter){
        while(reverse > 0){
            reverseUnit = reverse%10;
            switch(reverseUnit){                
                case 0:
            System.out.println("Zero");
            break;
                case 1:
            System.out.println("One");
            break;
                case 2:
            System.out.println("Two");
            break;
                case 3:
            System.out.println("Three");
            break;
                case 4:
            System.out.println("Four");
            break;
                case 5:
            System.out.println("Five");
            break;
                case 6:
            System.out.println("Six");
            break;
                case 7:
            System.out.println("Seven");
            break;
                case 8:
            System.out.println("Eight");
            break;
                case 9:
            System.out.println("Nine");
            break;
            }
            reverse = reverse/10;
        }
        }else{
            while(reverse > 0){
                switch(reverse%10){                
                case 0:
            System.out.println("Zero");
            break;
                case 1:
            System.out.println("One");
            break;
                case 2:
            System.out.println("Two");
            break;
                case 3:
            System.out.println("Three");
            break;
                case 4:
            System.out.println("Four");
            break;
                case 5:
            System.out.println("Five");
            break;
                case 6:
            System.out.println("Six");
            break;
                case 7:
            System.out.println("Seven");
            break;
                case 8:
            System.out.println("Eight");
            break;
                case 9:
            System.out.println("Nine");
            break;
            }
            reverse/=10;
            }
            while(counter>reverseCounter){
                System.out.println("Zero");
                reverseCounter+=1;
            }
        }
    }
    public static int reverse(int number){
        int reverse = 0;
        while(number != 0){
            if(number==0){
               return reverse;
            }else {
                reverse *= 10;
            }
            reverse += number%10;
            number = number/10;
        }
        return reverse;
    }
    public static int getDigitCount(int number){
        if(number < 0){
            return -1;
        }
        int counter = 0;
        do{
            counter += 1;
            number = number/10;
        }while(number > 0);
        return counter;
    }
}
            break;
                case 4:
            System.out.println("Four");
            break;
                case 5:
            System.out.println("Five");
            break;
                case 6:
            System.out.println("Six");
            break;
                case 7:
            System.out.println("Seven");
            break;
                case 8:
            System.out.println("Eight");
            break;
                case 9:
            System.out.println("Nine");
            break;
            }
            reverse/=10;
            }
            while(counter>reverseCounter){
                System.out.println("Zero");
                reverseCounter+=1;
            }
        }
    }
    public static int reverse(int number){
        int reverse = 0;
        while(number != 0){
            if(number==0){
               return reverse;
            }else {
                reverse *= 10;
            }
            reverse += number%10;
            number = number/10;
        }
        return reverse;
    }
    public static int getDigitCount(int number){
        if(number < 0){
            return -1;
        }
        int counter = 0;
        do{
            counter += 1;
            number = number/10;
        }while(number > 0);
        return counter;
    }
